# Generated by Django 5.2.1 on 2025-06-24 18:53

import django.db.models.deletion
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('notes', '0001_initial'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='bookmark',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarked_notes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='given_comments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contributor',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contribution_profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='course',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='notes.department'),
        ),
        migrations.AddField(
            model_name='faculty',
            name='department',
            field=models.ForeignKey(blank=True, help_text='Department to which the faculty belongs.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='faculties', to='notes.department'),
        ),
        migrations.AddField(
            model_name='like',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='liked_notes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='note',
            name='course',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notes', to='notes.course'),
        ),
        migrations.AddField(
            model_name='note',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notes', to='notes.department'),
        ),
        migrations.AddField(
            model_name='note',
            name='faculty',
            field=models.ForeignKey(blank=True, help_text='Select the faculty who taught the course.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notes', to='notes.faculty'),
        ),
        migrations.AddField(
            model_name='note',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='note',
            name='uploader',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_notes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='like',
            name='note',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='notes.note'),
        ),
        migrations.AddField(
            model_name='comment',
            name='note',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='notes.note'),
        ),
        migrations.AddField(
            model_name='bookmark',
            name='note',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to='notes.note'),
        ),
        migrations.AddField(
            model_name='note',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notes', to='notes.notecategory'),
        ),
        migrations.AddField(
            model_name='noterequest',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='note_requests', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='starrating',
            name='note',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='star_ratings', to='notes.note'),
        ),
        migrations.AddField(
            model_name='starrating',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='given_star_ratings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='course',
            unique_together={('name', 'department')},
        ),
        migrations.AlterUniqueTogether(
            name='like',
            unique_together={('user', 'note')},
        ),
        migrations.AlterUniqueTogether(
            name='comment',
            unique_together={('note', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='bookmark',
            unique_together={('user', 'note')},
        ),
        migrations.AlterUniqueTogether(
            name='starrating',
            unique_together={('note', 'user')},
        ),
    ]
